use crate::typecheck::ExpressionType;

use super::{HirModule, HirNode, HirNodeValue};

pub fn auto_deref_dot(module: &mut HirModule) {
    module.visit_mut(|node| {
        let HirNodeValue::Access(lhs, _) = &mut node.value else {
            return;
        };
        while let ExpressionType::Pointer(_, inner) = &lhs.ty {
            deref(lhs, *inner.clone());
        }
    });
}

fn deref(node: &mut HirNode, ty: ExpressionType) {
    let mut temp = HirNode::dummy();
    std::mem::swap(node, &mut temp);
    std::mem::swap(
        &mut HirNode::autogenerated(HirNodeValue::Dereference(Box::new(temp)), ty),
        node,
    );
}
