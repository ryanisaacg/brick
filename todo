parallel to "progress":
- the rest of the math operators
- the rest of the comparison operators
- integer promotion
- integer -> float promotion
- float -> int casting
- blocks returning values
- basic extern types
- constant evaluation
- namespacing
- symbols
- handle disposing of values from functions that aren't used
- early return
- else statements
- better type checking for struct fields?
- Reject null bytes in the lexer

data structures:
- the ability to heap allocate values
- sum types

closures (blocked by data structures):
- nested function declarations
- create the capture environment
- figure out how to make runtime function calls

source debugging:
- actually generate a line program that represents the source
- generate info for variables
- generate function preludes and epilogues
- generate info for computations

stuff to learn:
- pattern matching
- borrow-checking
- optimizations?

